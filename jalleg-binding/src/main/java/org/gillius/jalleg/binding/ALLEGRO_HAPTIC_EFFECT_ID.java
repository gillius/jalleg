package org.gillius.jalleg.binding;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.PointerByReference;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ALLEGRO_HAPTIC_EFFECT_ID extends Structure {
	public PointerByReference _haptic;
	public int _id;
	public int _handle;
	public Pointer _pointer;
	public double _effect_duration;
	public byte _playing;
	public double _start_time;
	public double _end_time;
	public Pointer driver;
	public ALLEGRO_HAPTIC_EFFECT_ID() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("_haptic", "_id", "_handle", "_pointer", "_effect_duration", "_playing", "_start_time", "_end_time", "driver");
	}
	public ALLEGRO_HAPTIC_EFFECT_ID(PointerByReference _haptic, int _id, int _handle, Pointer _pointer, double _effect_duration, byte _playing, double _start_time, double _end_time, Pointer driver) {
		super();
		this._haptic = _haptic;
		this._id = _id;
		this._handle = _handle;
		this._pointer = _pointer;
		this._effect_duration = _effect_duration;
		this._playing = _playing;
		this._start_time = _start_time;
		this._end_time = _end_time;
		this.driver = driver;
	}
	public ALLEGRO_HAPTIC_EFFECT_ID(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ALLEGRO_HAPTIC_EFFECT_ID implements Structure.ByReference {
		
	};
	public static class ByValue extends ALLEGRO_HAPTIC_EFFECT_ID implements Structure.ByValue {
		
	};
}
