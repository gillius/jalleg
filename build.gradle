/*
 * Copyright 2016 Jason Winnebeck
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

subprojects {
  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'signing'

  sourceCompatibility = 1.7
  targetCompatibility = 1.7
  version = '0.2-SNAPSHOT'
  group = 'org.gillius'

  repositories {
    jcenter()
  }

  task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
  }

  task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  artifacts {
    archives javadocJar, sourcesJar
  }

  signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
  }

  afterEvaluate { Project project ->
    Closure pomDefinition = {
      name project.pomInfo.name
      packaging 'jar'
      description project.pomInfo.description
      url 'https://github.com/gillius/jalleg'

      scm {
        connection 'scm:git:https://github.com/gillius/jalleg.git'
        developerConnection 'scm:git:git@github.com:gillius/jalleg.git'
        url 'https://github.com/gillius/jalleg'
      }

      licenses {
        license {
          name 'The Apache License, Version 2.0'
          url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          comments 'Copyright Jason Winnebeck'
          distribution 'repo'
        }
      }

      developers {
        developer {
          id 'jpw'
          name 'Jason Winnebeck'
          roles {
            role 'Author'
          }
        }
      }
    }

    boolean deployable = project.hasProperty("ossrhUsername") && project.hasProperty("ossrhPassword")

    if (deployable) {
      uploadArchives {
        repositories {
          mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
              authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
              authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project pomDefinition
          }
        }
      }
    }

    install {
      repositories.mavenInstaller {
        pom.project pomDefinition
      }
    }
  }
}

//Disable warnings about missing tags like @param on every element in Java 8
if (JavaVersion.current().isJava8Compatible()) {
  allprojects {
    tasks.withType(Javadoc) {
      options.addStringOption('Xdoclint:-missing', '-quiet')
    }
  }
}
