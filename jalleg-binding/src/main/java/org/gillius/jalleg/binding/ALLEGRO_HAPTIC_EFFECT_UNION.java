package org.gillius.jalleg.binding;
import com.sun.jna.Pointer;
import com.sun.jna.Union;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ALLEGRO_HAPTIC_EFFECT_UNION extends Union {
	public ALLEGRO_HAPTIC_CONSTANT_EFFECT constant;
	public ALLEGRO_HAPTIC_RAMP_EFFECT ramp;
	public ALLEGRO_HAPTIC_PERIODIC_EFFECT periodic;
	public ALLEGRO_HAPTIC_CONDITION_EFFECT condition;
	public ALLEGRO_HAPTIC_RUMBLE_EFFECT rumble;
	public ALLEGRO_HAPTIC_EFFECT_UNION() {
		super();
	}
	public ALLEGRO_HAPTIC_EFFECT_UNION(ALLEGRO_HAPTIC_CONSTANT_EFFECT constant) {
		super();
		this.constant = constant;
		setType(ALLEGRO_HAPTIC_CONSTANT_EFFECT.class);
	}
	public ALLEGRO_HAPTIC_EFFECT_UNION(ALLEGRO_HAPTIC_RAMP_EFFECT ramp) {
		super();
		this.ramp = ramp;
		setType(ALLEGRO_HAPTIC_RAMP_EFFECT.class);
	}
	public ALLEGRO_HAPTIC_EFFECT_UNION(ALLEGRO_HAPTIC_PERIODIC_EFFECT periodic) {
		super();
		this.periodic = periodic;
		setType(ALLEGRO_HAPTIC_PERIODIC_EFFECT.class);
	}
	public ALLEGRO_HAPTIC_EFFECT_UNION(ALLEGRO_HAPTIC_CONDITION_EFFECT condition) {
		super();
		this.condition = condition;
		setType(ALLEGRO_HAPTIC_CONDITION_EFFECT.class);
	}
	public ALLEGRO_HAPTIC_EFFECT_UNION(ALLEGRO_HAPTIC_RUMBLE_EFFECT rumble) {
		super();
		this.rumble = rumble;
		setType(ALLEGRO_HAPTIC_RUMBLE_EFFECT.class);
	}
	public ALLEGRO_HAPTIC_EFFECT_UNION(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ALLEGRO_HAPTIC_EFFECT_UNION implements com.sun.jna.Structure.ByReference {
		
	};
	public static class ByValue extends ALLEGRO_HAPTIC_EFFECT_UNION implements com.sun.jna.Structure.ByValue {
		
	};
}
