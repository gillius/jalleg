package org.gillius.jalleg.binding;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ALLEGRO_HAPTIC_RAMP_EFFECT extends Structure {
	public double start_level;
	public double end_level;
	public ALLEGRO_HAPTIC_ENVELOPE envelope;
	public ALLEGRO_HAPTIC_RAMP_EFFECT() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("start_level", "end_level", "envelope");
	}
	public ALLEGRO_HAPTIC_RAMP_EFFECT(double start_level, double end_level, ALLEGRO_HAPTIC_ENVELOPE envelope) {
		super();
		this.start_level = start_level;
		this.end_level = end_level;
		this.envelope = envelope;
	}
	public ALLEGRO_HAPTIC_RAMP_EFFECT(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ALLEGRO_HAPTIC_RAMP_EFFECT implements Structure.ByReference {
		
	};
	public static class ByValue extends ALLEGRO_HAPTIC_RAMP_EFFECT implements Structure.ByValue {
		
	};
}
