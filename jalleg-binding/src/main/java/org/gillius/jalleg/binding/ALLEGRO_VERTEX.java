package org.gillius.jalleg.binding;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ALLEGRO_VERTEX extends Structure {
	public float x;
	public float y;
	public float z;
	public float u;
	public float v;
	public ALLEGRO_COLOR color;
	public ALLEGRO_VERTEX() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("x", "y", "z", "u", "v", "color");
	}
	public ALLEGRO_VERTEX(float x, float y, float z, float u, float v, ALLEGRO_COLOR color) {
		super();
		this.x = x;
		this.y = y;
		this.z = z;
		this.u = u;
		this.v = v;
		this.color = color;
	}
	public ALLEGRO_VERTEX(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ALLEGRO_VERTEX implements Structure.ByReference {
		
	};
	public static class ByValue extends ALLEGRO_VERTEX implements Structure.ByValue {
		
	};
}
