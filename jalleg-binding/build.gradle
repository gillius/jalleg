import java.lang.reflect.Field

/*
 * Copyright 2016 Jason Winnebeck
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'signing'

archivesBaseName = 'jalleg-binding'

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

signing {
	required { gradle.taskGraph.hasTask("uploadArchives") }
	sign configurations.archives
}

Closure pomDefinition = {
	name 'jalleg binding'
	packaging 'jar'
	// optionally artifactId can be defined here
	description 'Java binding for Allegro'
	url 'https://github.com/gillius/jalleg'

	scm {
		connection 'scm:git:https://github.com/gillius/jalleg.git'
		developerConnection 'scm:git:git@github.com:gillius/jalleg.git'
		url 'https://github.com/gillius/jalleg'
	}

	licenses {
		license {
			name 'The Apache License, Version 2.0'
			url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
			comments 'Copyright Jason Winnebeck'
			distribution 'repo'
		}
	}

	developers {
		developer {
			id 'jpw'
			name 'Jason Winnebeck'
			roles {
				role 'Author'
			}
		}
	}
}

boolean hasUsername() {
	try {
		ossrhUsername
	} catch (Exception e) {
		false
	}
}

if (hasUsername()) {
	uploadArchives {
		repositories {
			mavenDeployer {
				beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

				repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
					authentication(userName: ossrhUsername, password: ossrhPassword)
				}

				snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
					authentication(userName: ossrhUsername, password: ossrhPassword)
				}

				pom.project pomDefinition
			}
		}
	}
}

install {
	repositories.mavenInstaller {
		pom.project pomDefinition
	}
}

dependencies {
	compile 'net.java.dev.jna:jna:4.2.2'
}
